/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void go_practice(GButton source, GEvent event) { //_CODE_:practice:648151:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:practice:648151:

public void go_stats(GButton source, GEvent event) { //_CODE_:stats:200879:
  println("stats - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:stats:200879:

public void go_settings(GButton source, GEvent event) { //_CODE_:settings:428865:
  println("settings - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:settings:428865:

public void buzz(GButton source, GEvent event) { //_CODE_:buzzer:681730:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  if (statusController.currentStatus == "not started") {
    statusController.currentStatus = "reading";
    buzzer.setText("Buzz!");
  } else if (statusController.currentStatus == "reading") {
    statusController.currentStatus = "buzzed";
    buzzer.setText("Buzzed");
  }
} //_CODE_:buzzer:681730:

public void answer_change(GTextArea source, GEvent event) { //_CODE_:answer:284648:
  println("answer - GTextArea >> GEvent." + event + " @ " + millis());
} //_CODE_:answer:284648:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  practice = new GButton(this, 0, 0, 100, 50);
  practice.setText("Practice");
  practice.addEventHandler(this, "go_practice");
  stats = new GButton(this, 100, 0, 100, 50);
  stats.setText("Stats");
  stats.addEventHandler(this, "go_stats");
  settings = new GButton(this, 200, 0, 100, 50);
  settings.setText("Settings");
  settings.addEventHandler(this, "go_settings");
  buzzer = new GButton(this, 0, 350, 300, 150);
  buzzer.setText("Buzz!");
  buzzer.addEventHandler(this, "buzz");
  answer = new GTextArea(this, 0, 300, 300, 50, G4P.SCROLLBARS_NONE);
  answer.setOpaque(true);
  answer.addEventHandler(this, "answer_change");
}

// Variable declarations 
// autogenerated do not edit
GButton practice; 
GButton stats; 
GButton settings; 
GButton buzzer; 
GTextArea answer; 
