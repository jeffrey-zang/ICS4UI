/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:709615:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button1:709615:

public void speedSliderChange(GSlider source, GEvent event) { //_CODE_:speedSlider:931236:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
  xSpeed = source.getValueF();
} //_CODE_:speedSlider:931236:

public void rChange(GSlider source, GEvent event) { //_CODE_:r:791157:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
  red = source.getValueF();
} //_CODE_:r:791157:

public void gChange(GSlider source, GEvent event) { //_CODE_:g:905965:
  println("g - GSlider >> GEvent." + event + " @ " + millis());
  green = source.getValueF();  
} //_CODE_:g:905965:

public void bChange(GSlider source, GEvent event) { //_CODE_:b:545917:
  println("b - GSlider >> GEvent." + event + " @ " + millis());
  blue = source.getValueF();
} //_CODE_:b:545917:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  button1 = new GButton(this, 17, 16, 80, 30);
  button1.setText("hi pal");
  button1.addEventHandler(this, "button1_click1");
  speedSlider = new GSlider(this, 8, 90, 100, 40, 10.0);
  speedSlider.setLimits(0.5, 0.0, 15.0);
  speedSlider.setNumberFormat(G4P.DECIMAL, 2);
  speedSlider.setOpaque(false);
  speedSlider.addEventHandler(this, "speedSliderChange");
  r = new GSlider(this, 8, 169, 100, 40, 10.0);
  r.setLimits(0.0, 0.0, 255.0);
  r.setNumberFormat(G4P.DECIMAL, 2);
  r.setOpaque(false);
  r.addEventHandler(this, "rChange");
  g = new GSlider(this, 7, 238, 100, 40, 10.0);
  g.setLimits(0.0, 0.0, 255.0);
  g.setNumberFormat(G4P.DECIMAL, 2);
  g.setOpaque(false);
  g.addEventHandler(this, "gChange");
  b = new GSlider(this, 7, 310, 100, 40, 10.0);
  b.setLimits(0.0, 0.0, 255.0);
  b.setNumberFormat(G4P.DECIMAL, 2);
  b.setOpaque(false);
  b.addEventHandler(this, "bChange");
  label1 = new GLabel(this, 18, 65, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Ball speed");
  label1.setOpaque(false);
  label2 = new GLabel(this, 16, 144, 80, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Red");
  label2.setOpaque(false);
  label3 = new GLabel(this, 18, 215, 80, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Green");
  label3.setOpaque(false);
  label4 = new GLabel(this, 12, 283, 80, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Blue");
  label4.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GButton button1; 
GSlider speedSlider; 
GSlider r; 
GSlider g; 
GSlider b; 
GLabel label1; 
GLabel label2; 
GLabel label3; 
GLabel label4; 
